#!/bin/sh
. /lib/functions.sh

#date +%T -s "01:38:18"
#date +%Y%m%d -s "1971-01-01"
#/etc/init.d/sysntpd restart

#-------------------------------------------------------------------------------
EMERG=1; ALERT=1; CRIT=1; WARNING=1; NOTICE=1; INFO=1; DEBUG=0; PANIC=1; ERROR=1; WARN=1;
alias do_log_emerg='test "$EMERG" = 1 && logger -s -p emerg -t "icc"'
alias do_log_alert='test "$ALERT" = 1 && logger -s -p alert -t "icc"'
alias do_log_crit='test "$CRIT" = 1 && logger -s -p crit -t "icc"'
alias do_log_warning='test "$WARNING" = 1 && logger -s -p warning -t "icc"'
alias do_log_notice='test "$NOTICE" = 1 && logger -s -p notice -t "icc"'
alias do_log_info='test "$INFO" = 1 && logger -s -p info -t "icc"'
alias do_log_debug='test "$DEBUG" = 1 && logger -s -p debug -t "icc"'
alias do_log_panic='test "$PANIC" = 1 && logger -s -p panic -t "icc"'
alias do_log_error='test "$ERROR" = 1 && logger -s -p error -t "icc"'
alias do_log_warn='test "$WARN" = 1 && logger -s -p warn -t "icc"'

#-------------------------------------------------------------------------------
init_var(){
	cfg=$1
	config_get IFNAME "$cfg" ifname  "unavailable"
	config_get TIMEOUT "$cfg" timeout "unavailable"
	config_get HOST "$cfg" host  "unavailable"
	
	config_get PANIC "$cfg" panic  "unavailable"
	config_get INTERVAL "$cfg" interval "unavailable"
	config_get HOTPLUG "$cfg" hotplug "unavailable"
	config_get DEBUG "$cfg" debug  "unavailable"
	
	config_get IF_STARTUP_D "$cfg" if_startup_d "unavailable"
	config_get IF_ONLINE_D "$cfg" if_online_d  "unavailable"
	config_get IF_OFFLINE_D "$cfg" if_offline_d "unavailable"
	config_get IF_PANIC_D "$cfg" if_panic_d  "unavailable"

	do_log_debug "Config general: ( interval: $INTERVAL panic: $PANIC hotplug: $HOTPLUG debug: $DEBUG )"
	do_log_debug "Config ping: ( Ifname: $IFNAME timeout: $TIMEOUT host: $HOST )"
	do_log_debug "Config hook: ( if_startup_d: $IF_STARTUP_D if_online_d: $IF_ONLINE_D if_offline_d: $IF_OFFLINE_D if_panic_d: $IF_PANIC_D )"
}

config_load icc
config_foreach init_var icc

status="unknown"
export IFNAME
export GLOBAL=$status
time_to_ping=$((`date +%s` + $INTERVAL)); 
panic_time_minutes="$(($PANIC*60))"
time_to_panic=$((`date +%s` + $panic_time_minutes));

for dir in "$IF_STARTUP_D" "$IF_ONLINE_D" "$IF_OFFLINE_D" "$IF_PANIC_D"; do
	mkdir -p $dir
	chmod -R +x $dir
done

#-------------------------------------------------------------------------------
call_scripts(){
	if [ -d "$1" ]; then
		scriptdir="$1"
		for script in $(ls $scriptdir/* 2>&-); do
			do_log_notice "running: $script"
			$script
			exitcode=$?
			if [ "$exitcode" != "0" ]; then
				do_log_warning "exit code: $exitcode, $script"
				fall="$exitcode"
			fi
		done
	fi
}

#-------------------------------------------------------------------------------
call_scripts "$IF_STARTUP_D"

while true; do
	if [ `date +%s` -ge "$time_to_ping" -o "$status" = "unknown" ]; then
		if [ "$INTERVAL" = "0" ]; then
			interval="$(awk -v min=30 -v max=$((60*3)) 'BEGIN{srand(); print int(min+rand()*(max-min+1))}')"
		else
			interval=$INTERVAL
		fi
		if /bin/ping -c 1 -W $TIMEOUT -I "$IFNAME" $HOST >/dev/null; then
			status="online"
		else
			status="offline"
		fi
		
		GLOBAL=$status
		time_to_ping=$((`date +%s` + $interval));
		
		notice_msg="Interface: $IFNAME,
			Status: $status,
			Ping destination: $HOST,
			Next check: $(date --date @$(($interval + `date +%s`)) +%H:%M:%S),
			Interval: $interval
			"
		do_log_notice $notice_msg
	fi

	if [ "$status" != "$savestatus" -o "$fall" != "0" ]; then
		fall="0"
		savestatus=$status
		test "$status" = "online" && call_scripts "$IF_ONLINE_D"
		test "$status" = "offline" && call_scripts "$IF_OFFLINE_D"
		test "$fall" = "0" && status="unknown"
		
	elif [ "$status" != "offline" ]; then
		time_to_panic=$((`date +%s` + $panic_time_minutes));
	fi
#	do_log_notice "$status $savestatus $fall"

	if [ "$time_to_panic" -le `date +%s` ]; then
		fall="0"
		call_scripts "$IF_PANIC_D"
		if [ "$fall" = "0" ];then
			time_to_panic=$((`date +%s` + $panic_time_minutes));
			status="unknown"
		fi
	fi

	if [ "$DEBUG" = "1" ]; then
		msg="interval countdown: $(date --date @$(($time_to_ping - `date +%s`)) +%H:%M:%S)"
		msg="${msg} panic countdown: $(date --date @$(($time_to_panic - `date +%s`)) +%H:%M:%S)"
		do_log_debug $msg
		sleep 1
	elif [ "$status" != "unknown" ]; then
		sleep $interval
	fi
done

#-------------------------------------------------------------------------------
























=
